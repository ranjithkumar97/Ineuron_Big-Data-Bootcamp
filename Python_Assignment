## Assignment Part-1
Q1. Why do we call Python as a general purpose and high-level programming language?

Ans===> Python is an interpreted language. This means that every time a program is run, 
	its interpreter runs through the code and translates it into machine-readable byte code.
	Because they are not written in machine-readable language,
	Python programs need to be processed before machines can run them.


Q2. Why is Python called a dynamically typed language?

Ans===> It doesn't know about the type of variable until the code is run.


Q3. List some pros and cons of Python programming language?

Ans===> 
Pros:
		---> It is simple and easy to use 
		---> It is Object- Oriented and has lots of Libraries
		---> It has built in Data structures and increases speed and productivity
		
Cons:
		---> Speed limitations and Problems with threading
		---> Memory consumption
		

Q4. In what all domains can we use Python?

Ans===> Since Python is the go-to programming language for domains such as artificial intelligence, 
	machine learning and deep learning, it's no surprise that it's also a fundamental tool for any data scientist.

Q5. What are variable and how can we declare them?

Ans===> Variables are used to store value in the memory location.

	Any variable name sholud be start with alphabets and the name given to a speicfic memory loaction.

	To declare the variable, we are using assignment operators to store the specific value

	i.e (int_var=10)---> int_var is a variable name, = is an assinment operator and 10 is the value

Q6. How can we take an input from the user in Python?

Ans===> By using the function called as input () as built in function 


Q7. What is the default datatype of the value that has been taken as an input using input() function?

Ans===> The input() function by default returns the value as string data type

Q8. What is type casting?

Ans===> It is the method to convert the variable data type into a certian data type in order to opertion required to be performed by end user.

Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?

Ans===> A function can take multiple inputs however one simple case is taking two inputs, like varibale as Name and Age

Q10. What are keywords?

Ans===> Python keywords are special reserved words that have specific meanings and purposes and can't be used for anything but those specific purposes

Q11. Can we use keywords as a variable? Support your answer with reason.

Ans===> Keywords are predefined, reserved words used in programming that have special meanings to the compiler.

	We cannot use a keyword as a variable name, function name, or any other identifier. 

Q12. What is indentation? What's the use of indentaion in Python?

Ans===> Python indentation refers to adding white space before a statement to a particular block of code.
	In most programming languages, indentation is used to properly structure the code

Q13. How can we throw some output in Python?

Ans===> By using Print() function, i.e print("Hello ineuron") ~ Output: Hello ineuron

Q14. What are operators in Python?

Ans===> Operators are used to perform operations on variables and values
	* Arithmetic operators
	* Assignment operators
	* Comparison operators
	* Logical operators
	
Q15. What is difference between / and // operators?

Ans===>	The single forward slash / operator is known as float division, which returns a floating point value.
	The double forward slash // operator returns a floored value, specifically either a floored integer or floating point value.

Q16. Write a code that gives following as an output.
```
iNeuroniNeuroniNeuroniNeuron
```
Ans===> var_first ="iNeuron"
	print(var_first*3) ~ Output: iNeuroniNeuroniNeuroniNeuron
		
Q17. Write a code to take a number as an input from the user and check if the number is odd or even.

Ans===> For finding odd or even using modulo operator ( num%2==0)
	
	int_num=input("Enter the number")
	casted_num=int(int_num)

	if casted_num%2==0:
    		print("Here is the even number",int_num)
	else:
    		print("Here is the odd number",int_num)

	print("Thank you!")


Q18. What are boolean operator?

Ans====> Boolean is a data type that is used to store two values True and False
	In python, we can evaluate any expression and can get one of two answers
	While comparing two values the expression is evaluated to either true or false.

Q19. What will the output of the following?

1 or 0 ---> True

0 and 0 ---->True

True and False and True

1 or 0 or 0
```

Q20. What are conditional statements in Python?

Ans===> A conditional statement in python, also called a condition constructs, is a statement that accommodates a condition inside itself. 
	This condition is constructed using the bitwise, boolean, and comparison operators in Python. if, elif and else

Q21. What is use of 'if', 'elif' and 'else' keywords?

Ans===> if is used to check the conidtion 
	elif is also known as Nested if
	else is used for the 

Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".

Ans===> int_age=input("Enter the age")
	result=int(int_age)

	if (result>=18):
    		print("I can vote")
	else:
    		print("I can't vote")


Q23. Write a code that displays the sum of all the even numbers from the given list.
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```

Ans===> test_list = [12, 75, 150, 180, 145, 525, 50]
 
# printing original list
print("The original list is : " + str(test_list))
 

even_sum = 0
 
for sub in test_list:
    for ele in str(sub):
         
        # adding in particular summation according to value
        if int(ele) % 2 == 0:
            even_sum += int(ele)
        
 
# printing result
print("Even digit sum : " + str(even_sum))


Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.

Ans===> #input first,Second and third number

num1=int(input("Enter First Number"))
num2=int(input("Enter Second Number"))
num3=int(input("Enter Third Number"))
#Check if first number is greater than rest of the two numbers.
if (num1> num2 and num1> num3):
    print("The Largest number is", num1)
#Check if Second number is greater than rest of the two numbers.
elif (num2 > num1 and num2> num3):
    print ("The Largest number is", num2)
else:
    print ("The Largest
	   
	   Anothe way :)

a= input("Enter the first no")
b=input("Enter the second no")
c=input("Enter the third no")

d=a,b,c

print("The given no a,b,c is:",d)
print("The greatest no:",max(d))


Q25. Write a program to display only those numbers from a list that satisfy the following conditions

- The number must be divisible by five

- If the number is greater than 150, then skip it and move to the next number

- If the number is greater than 500, then stop the loop
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
Ans===> 
	numbers = [12, 75, 150, 180, 145, 525, 50]
	for num in numbers:
   
    	if num>500:
        	break
    	elif num>150:
        	continue
    	elif num%5==0:
        	print("Result",num)


Q26. What is a string? How can we declare string in Python?

Ans===> Strings are Arrays.

         str1="Ranjith" #we can declare a string by using double/single quotes

Q27. How can we access the string using its index?

Ans===> str1="Ranjith"
        print(str1[:8])

Q28. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "iNeuron"
```
Ans===>  string = "Big Data iNeuron"
         print(string[9:16])

Q29. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "norueNi"
```
Ans===>  string = "Big Data iNeuron"
         print(string[16:8:-1])

Q30. Resverse the string given in the above question.
Ans===> string = "Big Data iNeuron"
        print(string[16::-1])

Q31. How can you delete entire string at once?
Ans===> By using clear ( ) method or Del str --->del keyword to delete the string variable
      

Q32. What is escape sequence?

Ans===> An escape sequence is a special character used in the form of backslash(\) followed by a character that is required.
	These characters are used to represent whitespace.
	Whitespace gives characters like space, tab, formfeed, vertical tab.

Q33. How can you print the below string?
```
'iNeuron's Big Data Course'
```
Ans===> Strr="iNeuron's Big Data Course"
         print(Strr)

Q34. What is a list in Python?
Ans====> List is to store multiple item in a single varibale

Q35. How can you create a list in Python?

Ans===> a=[1,2,3,4] #To create a list using square brackets

Q36. How can we access the elements in a list?
 Ans===> a=[1,2,3,4]
         print(a[1]) #by using index value or range or using for loop
         
         for i in a:
         print(i)

Q37. Write a code to access the word "iNeuron" from the given list.
```
lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]

Ans===>	lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]

	a=lst[4]
	print(a[2])

Q38. Take a list as an input from the user and find the length of the list.

Ans===> a=int(input("Enter the emp id"))
	b=str(input("Enter your name"))
	c=int(input("Enter your age"))


	z=a,b,c
	var1=list(z)
	print(len(var1))

Q39. Add the word "Big" in the 3rd index of the given list.
```
lst = ["Welcome", "to", "Data", "course"]
```
Ans===> lst = ["Welcome", "to", "Data", "course"]
        lst.insert(2,"Big")

        print(lst)


Q40. What is a tuple? How is it different from list?

Ans===>	Tuple is to store multiple items in a single varibales

Q41. How can you create a tuple in Python?

Ans===> t1=(112,"hi",2) 
	print(t1)

Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.

Ans===> In tuple, we cannot change or modify once tuple is cretaed, instead of that we can change with help of list and aslo convert back to tuple

	t1=(12,'ranjith',25)

	var=list(t1)

	print("The list before updating", var)

	var.insert(1,"Kumar")

	print("After updated the value",var)

	ar=tuple(var)

	print("Result",ar)

Q43. Can two tuple be appended. If yes, write a code for it. If not, why?

Ans===> Tuple is immutable, we cannot add or remove once tuple is created,
	however we can convert it into list and we can append the elements and again convert it back to tuple

Q44. Take a tuple as an input and print the count of elements in it.

Ans===> a=input("Enter your name")
	b=input("Enter your name")
	c=input("Enter your age")
	z=(a,b,c)
	print(type(z))
	print(z.count("Ranjith"))
	

Q45. What are sets in Python?

Ans===> Set is to store multiple items in a single varibales

Q46. How can you create a set?

Ans==> s1={1,2,3,"Ranjith"}

Q47. Create a set and add "iNeuron" in your set.

Ans===> s1={1,'ranjith',234}

	s1.add("iNeuron")
	print(s1)

Q48. Try to add multiple values using add() function.

Ans===> s1={1,'ranjith',234}

	s1.add("iNeuron")
	s1.add("Welcome to")
	print(s1)

Q49. How is update() different from add()?

Ans===> Add() is used to add the item in set, however update () is used like inserting the items from (list/tuple/dict) 

Q50. What is clear() in sets?

Ans===> Clear () is used for clearing the values in the set, it also known as empty set after clear () is used.

Q51. What is frozen set?

Q52. How is frozen set different from set?

Q53. What is union() in sets? Explain via code.

Q54. What is intersection() in sets? Explain via code.

Q55. What is dictionary in Python?

 Ans===> Dictionary is used to store multiple items using key and value pairs

Q56. How is dictionary different from all other data structures.

Ans: Dict is uses key: Value pairs

Q57. How can we delare a dictionary in Python?

Ans===>	 D1={1:"Ranjith") #By using key and value like a mapping the values with the help of keys

Q58. What will the output of the following?
```
var = {}
print(type(var))
```

Ans===> <class 'dict'> #Empty dict


Q59. How can we add an element in a dictionary?

Ans==> With the help of key---> key: value pairs

Q60. Create a dictionary and access all the values in that dictionary.

Ans===> d={"Name":'Ranjith',"Age":15,}

	print(d.values())

Q61. Create a nested dictionary and access all the element in the inner dictionary.

As===> var={
    "First":{1:"Ranjith",2:"Kumar"}, "Second": {3:"First name",4:"last name"}

	}
	print(var)

Q62. What is the use of get() function?

Ans===> return values using Key

Q63. What is the use of items() function?

Ans===> The items () method returns a view object. The view object contains the key-value pairs of the dictionary, as tuples in a list.


Q64. What is the use of pop() function?

Ans===> The pop () method removes (pops) the last element of an array. The pop () method changes the original array. 

Q65. What is the use of popitems() function?

Ans==>  The popitem () method removes the item that was last inserted into the dictionary

Q66. What is the use of keys() function?

Ans===> The keys () method in Python Dictionary, returns a view object that displays a list of all the keys in the dictionary in order of insertion using Python

Q67. What is the use of values() function?

Ans===>  The values () method returns a view object. The view object contains the values of the dictionary, as a list. 
	 The view object will reflect any changes done to the dictionary
	 
Q68. What are loops in Python?

Ans===> A concept in Python programming package that allows repetition of certain steps, or printing or execution of the similar set of steps repetitively, 
	based on the keyword that facilitates such functionality being used, and that steps specified under the keyword automatically indent .
	
Q69. How many type of loop are there in Python?

Ans===>There are 2 loops, for loop and While loop.


Q70. What is the difference between for and while loops?

Ans===> the number of iterations to be conducted is already known whereas in while loop the number of iterations are not known.

Q71. What is the use of continue statement?

Ans===> Python continue statement is used to skip the execution of the current iteration of the loop

Q72. What is the use of break statement?

Ans===> Break statement The break statement is used to terminate the loop or statement in which it is present

Q73. What is the use of pass statement?

Ans===> The Python Pass statement is used as a placeholder within loops, functions, classes, and if-statements that will be implemented later.

Q74. What is the use of range() function?

Ans===> The range () function returns a sequence of numbers, starting from 0 by default, and increments by 1 (by default), and stops before a specified number

Q75. How can you loop over a dictionary?

Ans===> To loop or iterate over each element of a dictionary variable, you have to use the for loop of Python. You can get the dictionary variable keys and values in the output. 
	Use the for loop of Python and use only keys or values in your programming.


### Coding problems
Q76. Write a Python program to find the factorial of a given number.

Ans===> def fact(n):
	 f=1
	  for i in range(1,n+1):
	   f=f*i
	  return f
	x=5
	print(fact(x))

Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (P*R*T)/100

Ans===> p=float(input("Enter the principle amount"))
	r=float(input("Enter the rate"))
	t=float(input("Enter time in no of years"))

	si=(p*r*t)/100

	print(("The simple interest is",si))

Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.

Ans===> p=float(input("Enter the principle amount"))
	r=float(input("Enter the rate"))
	t=float(input("Enter the time in no of years"))
	
	A = P(1+ R/100)^t.

	print(("The simple interest is",A))

Q79. Write a Python program to check if a number is prime or not.

Ans===> 	# given number
		number = 5
		# intializing a temporary variable with False
		temp = False
		# We will check if the number is greater than 1 or not
		# since prime numbers starts from 2
		if number > 1:
    		# checking the divisors of the number
    		 for i in range(2, number):
        	if (number % i) == 0:
           	 # if any divisor is found then set temp to true since it is not prime number
            	 temp = True
            	# Break the loop if it is not prime
            	 break
		if(temp):
    			print("The given number", number, "is not prime number")
		else:
    			print("The given number", number, "is prime number")
		
Q80. Write a Python program to check Armstrong Number.

Ans===>	def Armstrong(n,o):
    		sum = 0
    	temp = n
    	while temp > 0:
       	digit = temp % 10
		sum += digit ** o
       		temp = temp//10
    	if n == sum:
       		print(n,"is an Armstrong number")
    	else:
       		print(n,"is not an Armstrong number")
    
	num = int(input("Enter Number: "))
	order = len(str(num))
	Armstrong(num,order)
	
Q81. Write a Python program to find the n-th Fibonacci Number.

Ans===> 
	def Fibonacci(n):
    		if n<= 0:
       			 print("Incorrect input")
    			# First Fibonacci number is 0
    		elif n == 1:
        		return 0
    			# Second Fibonacci number is 1
    		elif n == 2:
        		return 1
    		else:
        		return Fibonacci(n-1)+Fibonacci(n-2)
 
 
	print(Fibonacci(10))

Q82. Write a Python program to interchange the first and last element in a list.

Q83. Write a Python program to swap two elements in a list.

Ans===> NumList = []
 
	#how many elements in list
	Number = int(input("How many elements in list :- "))
     
	for i in range(1, Number + 1):
	    value = int(input("Please enter the Value of %d Element :- " %i))
	    NumList.append(value)

	#print list before swapping
	print("\nList before swapping of elements :-\n",NumList)

		# Swap list 
	temp=NumList[0]
	NumList[0]=NumList[Number-1]
	NumList[Number-1]=temp
   
print("List after swapping of elements :-\n",NumList) 


Q84. Write a Python program to find N largest element from a list.

Ans===> # Python program to find largest
	# number in a list

	# list of numbers
	list1 = [10, 20, 4, 45, 99]

	# sorting the list
	list1.sort()

	# printing the last element
	print("Largest element is:", list1[-1])

Q85. Write a Python program to find cumulative sum of a list.

Ans===> # Python code to get the Cumulative sum of a list
	def Cumulative(lists):
	    cu_list = []
	    length = len(lists)
	    cu_list = [sum(lists[0:x:1]) for x in range(0, length+1)]
	    return cu_list[1:]

	
	lists = [10, 20, 30, 40, 50]
	print (Cumulative(lists))

Q86. Write a Python program to check if a string is palindrome or not.

Ans===> def isPalindrome(s):
	    return s == s[::-1]


	
	s = "malayalam"
	ans = isPalindrome(s)

	if ans:
	    print("Yes")
	else:
	    print("No")

Q87. Write a Python program to remove i'th element from a string.

Ans===>	test_str = "Ranjith kumar"

	# Removing char at pos 3
	new_str = ""

	for i in range(len(test_str)):
	    if i != 2:
		new_str = new_str + test_str[i]

	# Printing string after removal
	print ("The string after removal of i'th character : " + new_str)

Q88. Write a Python program to check if a substring is present in a given string.

Ans===> def check(str1, sstr): 
	   if (str1.find(sstr) == -1): 
	      print(sstr,"IS NOT PRESENT IN THE GIVEN STRING") 
	   else: 
	      print(sstr,"IS PRESENT IN THE GIVEN STRING") 
	
	str1 = input("Enter the string ::>")
	sstr=input("Enter Substring ::>")
	check(str1, sstr) 

Q89. Write a Python program to find words which are greater than given length k.

Ans===> myStr =  input('Enter the string : ')
	k = int(input('Enter k  (value for accepting string) : '))
	largerStrings = []

	
	words = myStr.split(" ")
	for word in words:
		if len(word) > k:
			largerStrings.append(word)

	
	print("All words which are greater than given length ", k, "are ", largerStrings)

Q90. Write a Python program to extract unquire dictionary values.

	Ans===> my_dict = {'hi' : [5,3,8, 0],
	   'first' : [22, 51, 63, 77],
	   'second' : [7, 0, 22],
	   'third' : [12, 11, 45],
	   'fourth' : [56, 31, 89, 90]}

	print("The dictionary is : ")
	print(my_dict)

	my_result = list(sorted({elem for val in my_dict.values() for elem in val}))

	print("The unique values are : ")
	print(my_result)

Q91. Write a Python program to merge two dictionary.

Ans===> def Merge(dict1, dict2):
	    return(dict2.update(dict1))


	# Driver code
	dict1 = {'a': 10, 'b': 8}
	dict2 = {'d': 6, 'c': 4}

	# This returns None
	print(Merge(dict1, dict2))

	# changes made in dict2
	print(dict2)

Q92. Write a Python program to convert a list of tuples into dictionary.
```
Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}

Ans===> def Convert(tup, di):
	    di = dict(tup)
	    return di

	# Driver Code 
	tups =  [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
	dictionary = {}
	print (Convert(tups, dictionary))
	
	(or)
	
	A= [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
	ab=dict(A)
	print(ab)

Q93. Write a Python program to create a list of tuples from given list having number and its cube in each tuple.
```
Input: list = [9, 5, 6]
Output: [(9, 729), (5, 125), (6, 216)]

Ans===> list1 = [9, 5, 6]

	# using list comprehension to iterate each
	# values in list and create a tuple as specified
	res = [(val, pow(val, 3)) for val in list1]

	# print the result
	print(res)

Q94. Write a Python program to get all combinations of 2 tuples.
```
Input : test_tuple1 = (7, 2), test_tuple2 = (7, 8)
Output : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]
```
Ans===>  initializing tuples
	test_tuple1 = (7, 2)
	test_tuple2 = (7, 8)

	# printing original tuples
	print("The original tuple 1 : " + str(test_tuple1))
	print("The original tuple 2 : " + str(test_tuple2))

	# All pair combinations of 2 tuples
	# Using list comprehension
	res =  [(a, b) for a in test_tuple1 for b in test_tuple2]
	res = res +  [(a, b) for a in test_tuple2 for b in test_tuple1]

	# printing result 
	print("The filtered tuple : " + str(res))

Q95. Write a Python program to sort a list of tuples by second item.
```
Input : [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
Output : [('Geeks', 8), ('for', 24), ('Geeks', 30)]

Ans===> def Sort_Tuple(tup):

	    # getting length of list of tuples
	    lst = len(tup)
	    for i in range(0, lst):

		for j in range(0, lst-i-1):
		    if (tup[j][1] > tup[j + 1][1]):
			temp = tup[j]
			tup[j]= tup[j + 1]
			tup[j + 1]= temp
	    return tup

	
	tup =[('for', 24), ('Geeks', 8), ('Geeks', 30)] 

	print(Sort_Tuple(tup))

Q96. Write a python program to print below pattern.
```
* 
* * 
* * * 
* * * * 
* * * * * 
```

Ans===> n = 5

	for i in range(1, n+1):
	    # internal loop run for i times
	    for k in range(1, i+1):
		print("*", end="")
	    print()
Q97. Write a python program to print below pattern.
```
    *
   **
  ***
 ****
*****
```
Ans===> size = 5
	for i in range(size):
	    for j in range(1, size - i):
		print(" ", end="")
	    for k in range(0, i + 1):
		print("*", end="")
	    print()
	    
Q98. Write a python program to print below pattern.
```
    * 
   * * 
  * * * 
 * * * * 
* * * * * 
```

Ans===> n = 5
	for i in range(n):
	    for j in range(n - i - 1):
		print(' ', end='')
	    for k in range(2 * i + 1):
		print('*', end='')
	    print()

Q99. Write a python program to print below pattern.
```
1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5
```

Ans===> rows = 5
	for i in range(1, rows + 1):
	    for j in range(1, i + 1):
		print(j, end=' ')
	    print('')

Q100. Write a python program to print below pattern.
```
A 
B B 
C C C 
D D D D 
E E E E E 
```

Ans===> for i in range (65,70):
	    # inner loop for jth columns
	    for j in range(65,i+1):
		print(chr(i),end="")

	    print()
